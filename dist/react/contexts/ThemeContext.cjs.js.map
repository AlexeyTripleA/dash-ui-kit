{"version":3,"file":"ThemeContext.cjs.js","sources":["../../../src/react/contexts/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react'\n\nexport type Theme = 'light' | 'dark'\n\n/**\n * Context value shape for theme switching.\n */\nexport interface ThemeContextValue {\n  /** Current theme, either 'light' or 'dark'. */\n  theme: Theme\n  /** Set the theme explicitly. */\n  setTheme: (theme: Theme) => void\n  /** Toggle between 'light' and 'dark'. */\n  toggleTheme: () => void\n}\n\nconst ThemeContext = React.createContext<ThemeContextValue | undefined>(undefined)\n\n/**\n * Props for the ThemeProvider component.\n */\nexport interface ThemeProviderProps {\n  /** Initial theme; if not provided, reads from localStorage or defaults to 'light'. */\n  initialTheme?: Theme\n  /** React children that will have access to the theme context. */\n  children: React.ReactNode\n}\n\n/**\n * Provides theme context to its descendants and syncs theme with localStorage\n * and the root HTML element's class list ('light' or 'dark').\n *\n * @param initialTheme - Optional initial theme override.\n * @param children - React children.\n */\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ initialTheme, children }) => {\n  /**\n   * Retrieve stored theme from localStorage, if available.\n   */\n  const getStoredTheme = (): Theme | null => {\n    if (typeof window === 'undefined') return null\n    const stored = localStorage.getItem('theme')\n    return (stored != null && (stored === 'light' || stored === 'dark')) ? stored : null\n  }\n\n  const [theme, setThemeState] = React.useState<Theme>(() => {\n    return initialTheme ?? getStoredTheme() ?? 'light'\n  })\n\n  // Sync theme changes to document <html> class and localStorage.\n  React.useEffect(() => {\n    document.documentElement.classList.toggle('dark', theme === 'dark')\n    document.documentElement.classList.toggle('light', theme === 'light')\n    try {\n      localStorage.setItem('theme', theme)\n    } catch {\n      // Ignore localStorage.\n    }\n  }, [theme])\n\n  /**\n   * Update theme state explicitly.\n   * @param newTheme - The theme to set ('light' or 'dark').\n   */\n  const setTheme = (newTheme: Theme): void => {\n    setThemeState(newTheme)\n  }\n\n  /**\n   * Toggle between 'light' and 'dark' theme.\n   */\n  const toggleTheme = (): void => {\n    setThemeState((current) => (current === 'light' ? 'dark' : 'light'))\n  }\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\n/**\n * Hook to access the theme context.\n * @returns ThemeContextValue - Contains `theme`, `setTheme`, and `toggleTheme`.\n * @throws If used outside of a ThemeProvider.\n */\nexport function useTheme (): ThemeContextValue {\n  const context = React.useContext(ThemeContext)\n  if (context == null) {\n    throw new Error('useTheme must be used within a ThemeProvider')\n  }\n  return context\n}\n"],"names":["ThemeContext","React","createContext","undefined","ThemeProvider","initialTheme","children","getStoredTheme","window","stored","localStorage","getItem","theme","setThemeState","useState","_a","useEffect","document","documentElement","classList","toggle","setItem","setTheme","newTheme","toggleTheme","current","_jsx","Provider","value","useTheme","context","useContext","Error"],"mappings":";;;;;;;AAgBA,MAAMA,YAAY,gBAAGC,KAAK,CAACC,aAAa,CAAgCC,SAAS,CAAC;AAYlF;;;;;;AAMG;AACI,MAAMC,aAAa,GAAiCA,CAAC;EAAEC,YAAY;AAAEC,EAAAA;AAAU,CAAA,KAAI;AACxF;;AAEG;EACH,MAAMC,cAAc,GAAGA,MAAmB;AACxC,IAAA,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE,OAAO,IAAI;AAC9C,IAAA,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAC5C,IAAA,OAAQF,MAAM,IAAI,IAAI,KAAKA,MAAM,KAAK,OAAO,IAAIA,MAAM,KAAK,MAAM,CAAC,GAAIA,MAAM,GAAG,IAAI;GACrF;EAED,MAAM,CAACG,KAAK,EAAEC,aAAa,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAQ,MAAK;;IACxD,OAAO,CAAAC,EAAA,GAAAV,YAAY,KAAA,IAAA,IAAZA,YAAY,KAAA,MAAA,GAAZA,YAAY,GAAIE,cAAc,EAAE,MAAI,IAAA,IAAAQ,EAAA,KAAA,MAAA,GAAAA,EAAA,GAAA,OAAO;AACpD,GAAC,CAAC;AAEF;EACAd,KAAK,CAACe,SAAS,CAAC,MAAK;AACnBC,IAAAA,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAER,KAAK,KAAK,MAAM,CAAC;AACnEK,IAAAA,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,OAAO,EAAER,KAAK,KAAK,OAAO,CAAC;IACrE,IAAI;AACFF,MAAAA,YAAY,CAACW,OAAO,CAAC,OAAO,EAAET,KAAK,CAAC;KACrC,CAAC,OAAAG,EAAA,EAAM;AACN;AAAA;AAEJ,GAAC,EAAE,CAACH,KAAK,CAAC,CAAC;AAEX;;;AAGG;EACH,MAAMU,QAAQ,GAAIC,QAAe,IAAU;IACzCV,aAAa,CAACU,QAAQ,CAAC;GACxB;AAED;;AAEG;EACH,MAAMC,WAAW,GAAGA,MAAW;IAC7BX,aAAa,CAAEY,OAAO,IAAMA,OAAO,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;GACrE;AAED,EAAA,OACEC,cAAC,CAAA1B,YAAY,CAAC2B,QAAQ,EAAA;AAACC,IAAAA,KAAK,EAAE;MAAEhB,KAAK;MAAEU,QAAQ;AAAEE,MAAAA;KAAa;cAC3DlB;AAAQ,GAAA,CACa;AAE5B;AAEA;;;;AAIG;SACauB,QAAQA,GAAA;AACtB,EAAA,MAAMC,OAAO,GAAG7B,KAAK,CAAC8B,UAAU,CAAC/B,YAAY,CAAC;EAC9C,IAAI8B,OAAO,IAAI,IAAI,EAAE;AACnB,IAAA,MAAM,IAAIE,KAAK,CAAC,8CAA8C,CAAC;AACjE;AACA,EAAA,OAAOF,OAAO;AAChB;;;;;"}